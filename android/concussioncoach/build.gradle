apply plugin: 'android'

repositories {
    mavenCentral()
}

dependencies {
    // compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':dbcompiler')
    compile project(':daelib')
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.1'
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

task (buildDB, dependsOn:':dbcompiler:assemble', type:JavaExec) {
    main = tasks.getByPath(':dbcompiler:run').main
    classpath = tasks.getByPath(':dbcompiler:run').classpath
    File dbXML = file('../../content/ptsdcoach/tbicoach_content.xml')
    File dbOutput = file('assets/content.db')
    File contentDirIn = file('../../content/ptsdcoach')
    File contentDirOut = file('assets/Content')
    args dbXML.getAbsolutePath(), dbOutput.getAbsolutePath(), contentDirIn.getAbsolutePath(), contentDirOut.getAbsolutePath()

    inputs.dir contentDirIn
    outputs.dir contentDirOut

    doFirst { println 'Starting buildDB' }
    doLast { println 'Finished buildDB' }
}

assemble.dependsOn buildDB
assembleDebug.dependsOn buildDB

